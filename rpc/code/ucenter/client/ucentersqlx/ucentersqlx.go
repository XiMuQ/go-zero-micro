// Code generated by goctl. DO NOT EDIT.
// Source: ucenter.proto

package ucentersqlx

import (
	"context"

	"go-zero-micro/rpc/code/ucenter/ucenter"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseDataList  = ucenter.BaseDataList
	BaseIdList    = ucenter.BaseIdList
	BaseModel     = ucenter.BaseModel
	BaseModelList = ucenter.BaseModelList
	BaseResp      = ucenter.BaseResp
	User          = ucenter.User
	UserLoginResp = ucenter.UserLoginResp

	UcenterSqlx interface {
		// 获取用户信息
		GetUser(ctx context.Context, in *BaseModel, opts ...grpc.CallOption) (*User, error)
		// 添加用户
		AddUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*BaseResp, error)
		// 注销用户信息
		DeleteUser(ctx context.Context, in *BaseModel, opts ...grpc.CallOption) (*BaseResp, error)
		// 用户登录
		LoginUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserLoginResp, error)
	}

	defaultUcenterSqlx struct {
		cli zrpc.Client
	}
)

func NewUcenterSqlx(cli zrpc.Client) UcenterSqlx {
	return &defaultUcenterSqlx{
		cli: cli,
	}
}

// 获取用户信息
func (m *defaultUcenterSqlx) GetUser(ctx context.Context, in *BaseModel, opts ...grpc.CallOption) (*User, error) {
	client := ucenter.NewUcenterSqlxClient(m.cli.Conn())
	return client.GetUser(ctx, in, opts...)
}

// 添加用户
func (m *defaultUcenterSqlx) AddUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*BaseResp, error) {
	client := ucenter.NewUcenterSqlxClient(m.cli.Conn())
	return client.AddUser(ctx, in, opts...)
}

// 注销用户信息
func (m *defaultUcenterSqlx) DeleteUser(ctx context.Context, in *BaseModel, opts ...grpc.CallOption) (*BaseResp, error) {
	client := ucenter.NewUcenterSqlxClient(m.cli.Conn())
	return client.DeleteUser(ctx, in, opts...)
}

// 用户登录
func (m *defaultUcenterSqlx) LoginUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserLoginResp, error) {
	client := ucenter.NewUcenterSqlxClient(m.cli.Conn())
	return client.LoginUser(ctx, in, opts...)
}
