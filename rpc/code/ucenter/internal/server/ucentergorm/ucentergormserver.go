// Code generated by goctl. DO NOT EDIT.
// Source: ucenter.proto

package server

import (
	"context"

	"go-zero-micro/rpc/code/ucenter/internal/logic/ucentergorm"
	"go-zero-micro/rpc/code/ucenter/internal/svc"
	"go-zero-micro/rpc/code/ucenter/ucenter"
)

type UcenterGormServer struct {
	svcCtx *svc.ServiceContext
	ucenter.UnimplementedUcenterGormServer
}

func NewUcenterGormServer(svcCtx *svc.ServiceContext) *UcenterGormServer {
	return &UcenterGormServer{
		svcCtx: svcCtx,
	}
}

// 获取用户信息
func (s *UcenterGormServer) GetUser(ctx context.Context, in *ucenter.BaseModel) (*ucenter.User, error) {
	l := ucentergormlogic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

// 添加用户
func (s *UcenterGormServer) AddUser(ctx context.Context, in *ucenter.User) (*ucenter.BaseResp, error) {
	l := ucentergormlogic.NewAddUserLogic(ctx, s.svcCtx)
	return l.AddUser(in)
}

// 注销用户信息
func (s *UcenterGormServer) DeleteUser(ctx context.Context, in *ucenter.BaseModel) (*ucenter.BaseResp, error) {
	l := ucentergormlogic.NewDeleteUserLogic(ctx, s.svcCtx)
	return l.DeleteUser(in)
}

// 用户登录
func (s *UcenterGormServer) LoginUser(ctx context.Context, in *ucenter.User) (*ucenter.UserLoginResp, error) {
	l := ucentergormlogic.NewLoginUserLogic(ctx, s.svcCtx)
	return l.LoginUser(in)
}
